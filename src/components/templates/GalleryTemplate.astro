
---
import Gallery from '../Gallery.astro';

export interface Props {
  project: any;
}

const { project } = Astro.props;
const { data } = project;

// Get all media items for gallery
const allMedia = data.media || [];
---


<article class="project-detail gallery">
  <header class="project-header">
    <h1>{data.title}</h1>
    {data.blurb && <p class="project-blurb">{data.blurb}</p>}
    {data.date && <time class="project-date">{data.date}</time>}
  </header>
  
  <div class="project-content">
    <div class="project-description">
      <slot />
    </div>
    
    {data.links && data.links.length > 0 && (
      <div class="project-links">
        <h3>Links</h3>
        <div class="links-list">
          {data.links.map((link) => (
            <a href={link.url} target="_blank" class="project-link">
              {link.label}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {allMedia.length > 0 && (
      <div class="project-media">
        <h3>Gallery</h3>
        <Gallery media={allMedia.map(media => ({
          type: media.type,
          src: media.src,
          alt: media.alt || data.title,
          caption: media.caption
        }))} />
      </div>
    )}
  </div>
</article>


<style>
  .project-detail {
    max-width: 1000px;
    margin: 0 auto;
    padding-top: 4rem; /* Account for fixed header */
  }
  
  .project-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #333;
  }

  
  h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: #ffffff;
  }
  
  .project-blurb {
    font-size: 1.2rem;
    color: #cccccc;
    margin-bottom: 1rem;
  }
  
  .project-date {
    color: #888;
    font-size: 0.9rem;
  }
  
  .project-content {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  
  .project-description {
    font-size: 1.1rem;
    line-height: 1.7;
    color: #e5e5e5;
  }
  
  .project-description :global(h2) {
    font-size: 1.5rem;
    margin: 2rem 0 1rem 0;
    color: var(--accent-color, #3b82f6);
  }
  
  .project-description :global(h3) {
    font-size: 1.25rem;
    margin: 1.5rem 0 0.75rem 0;
    color: #ffffff;
  }
  
  .project-description :global(p) {
    margin-bottom: 1rem;
  }
  
  .project-links h3,
  .project-media h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--accent-color, #3b82f6);
  }
  
  .links-list {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }
  
  .project-link {
    display: inline-block;
    background: var(--accent-color, #3b82f6);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    text-decoration: none;
    font-weight: 500;
    transition: background 0.2s;
  }
  
  .project-link:hover {
    background: #2563eb;
  }
  
  /* Gallery-specific styles */
  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
  }
  
  .gallery-item {
    background: #1a1a1a;
    border-radius: 0.5rem;
    overflow: hidden;
    border: 1px solid #333;
    transition: transform 0.2s;
    cursor: pointer;
  }
  
  .gallery-item:hover {
    transform: scale(1.02);
  }
  
  
  .gallery-item img,
  .gallery-item video {
    width: 100%;
    height: 200px;
    object-fit: cover;
    display: block;
  }
  
  .media-caption {
    padding: 0.75rem;
    font-size: 0.85rem;
    color: #cccccc;
    margin: 0;
  }
  
  @media (max-width: 768px) {
    .project-detail {
      padding-top: 3.5rem; /* Adjust for mobile header */
    }
    
    h1 {
      font-size: 2rem;
    }
    
    .project-blurb {
      font-size: 1.1rem;
    }
    
    .gallery-grid {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 0.75rem;
    }
    
    .gallery-item img,
    .gallery-item video {
      height: 150px;
    }
    
  }
</style>
