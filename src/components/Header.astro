---
import { siteConfig } from '../config/site';

export interface Props {
  currentPage?: string;
  logoText?: string;
  includeArrow?: boolean;
}

const { currentPage = '', logoText, includeArrow = false } = Astro.props;
---

<header class="persistent-header">
  <nav class="main-nav">
    <a href="/" class={`nav-logo ${logoText ? 'custom-text' : ''}`} id="nav-logo">
      {includeArrow && (
        <svg class="back-arrow" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
      )}
      {logoText || siteConfig.name}
    </a>
    
    <!-- Desktop Navigation -->
    <div class="nav-links desktop-nav">
      {siteConfig.navigation.map(nav => (
        <a 
          href={nav.href} 
          class={currentPage === nav.name.toLowerCase() ? 'active' : ''}
        >
          {nav.name}
        </a>
      ))}
    </div>

    <!-- Mobile Hamburger Button -->
    <button class="hamburger" id="hamburger" aria-label="Toggle menu">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>

    <!-- Mobile Navigation -->
    <div class="mobile-nav" id="mobile-nav">
      {siteConfig.navigation.map(nav => (
        <a 
          href={nav.href} 
          class={currentPage === nav.name.toLowerCase() ? 'active' : ''}
        >
          {nav.name}
        </a>
      ))}
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const hamburger = document.getElementById('hamburger');
    const mobileNav = document.getElementById('mobile-nav');
    const navLogo = document.getElementById('nav-logo');
    
    // Handle back button functionality
    if (navLogo && navLogo.querySelector('.back-arrow')) {
      navLogo.addEventListener('click', function(e) {
        e.preventDefault();
        history.back();
      });
    }
    
    hamburger.addEventListener('click', function() {
      hamburger.classList.toggle('active');
      mobileNav.classList.toggle('active');
    });

    // Close mobile menu when clicking on a link
    const mobileLinks = mobileNav.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', function() {
        hamburger.classList.remove('active');
        mobileNav.classList.remove('active');
      });
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', function(event) {
      if (!hamburger.contains(event.target) && !mobileNav.contains(event.target)) {
        hamburger.classList.remove('active');
        mobileNav.classList.remove('active');
      }
    });
  });
</script>

<style is:global>
  /* Global content link colors (scoped to body copy, not header) */
  .project-description a,
  .text-content a {
    color: #5688d7;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .project-description a:hover,
  .text-content a:hover {
    color: #60a5fa;
    text-decoration: underline;
  }

  .project-description a:visited,
  .text-content a:visited {
    color: #5d7fb5;
  }

  /* .text-content ul li,  */
  .project-description ol li,
  .project-description ul li 
  { 
    margin-bottom: 0 !important; 
    padding-left: 1.5rem !important;
  }

  /* .text-content ul,  */
  .project-description ol,
  .project-description ul 
  { 
    margin-bottom: .2rem !important; 
    margin-top: .2rem !important;
  }

  /* Harden header nav link colors so they are unaffected by content rules */
  .nav-links a,
  .nav-links a:visited {
    color: #cccccc;
  }
  /* (Removed global link overrides; link styles are now scoped in TextBlock) */

  .persistent-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(15, 15, 15, 0.50) !important;
    backdrop-filter: blur(5px);
    border-bottom: 1px solid rgba(51, 51, 51, 0.5);
    transition: all 0.3s ease;
  }

  .main-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .nav-logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: #ffffff;
    text-decoration: none;
    transition: color 0.2s;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .nav-logo:hover {
    color: var(--accent-color, #3b82f6);
  }

  .back-arrow {
    transition: transform 0.2s ease;
  }

  .nav-logo:hover .back-arrow {
    transform: translateX(-2px);
  }

  .nav-logo.custom-text {
    font-size: 1rem;
    font-weight: 400;
  }

  .nav-links {
    display: flex;
    gap: 2rem;
  }

  .nav-links a {
    color: #cccccc;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s;
    position: relative;
  }

  .nav-links a:hover,
  .nav-links a.active {
    color: var(--accent-color, #3b82f6);
  }

  .nav-links a.active::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--accent-color, #3b82f6);
    border-radius: 1px;
  }

  /* Hamburger Menu */
  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001;
  }

  .hamburger-line {
    width: 2rem;
    height: 0.25rem;
    background: #ffffff;
    border-radius: 10px;
    transition: all 0.3s linear;
    position: relative;
    transform-origin: 1px;
  }

  .hamburger.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg);
  }

  .hamburger.active .hamburger-line:nth-child(2) {
    opacity: 0;
    transform: translateX(20px);
  }

  .hamburger.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg);
  }

  /* Mobile Navigation */
  .mobile-nav {
    display: none;
    position: fixed;
    top: 0;
    right: -100%;
    width: 100%;
    height: 100vh;
    background: rgba(194, 29, 29, 0.177);
    backdrop-filter: blur(10px);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    transition: right 0.3s ease-in-out;
    z-index: 1000;
  }

  .mobile-nav.active {
    right: 0;
  }

  .mobile-nav a {
    color: #ffffff;
    text-decoration: none;
    font-size: 1.5rem;
    font-weight: 500;
    transition: color 0.2s;
    position: relative;
  }

  .mobile-nav a:hover,
  .mobile-nav a.active {
    color: var(--accent-color, #3b82f6);
  }

  .mobile-nav a.active::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 2rem;
    height: 2px;
    background: var(--accent-color, #3b82f6);
    border-radius: 1px;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .main-nav {
      padding: 1rem;
      justify-content: space-between;
    }

    .desktop-nav {
      display: none;
    }

    .hamburger {
      display: flex;
    }

    .mobile-nav {
      display: flex;
    }
  }

  @media (max-width: 480px) {
    .main-nav {
      padding: 0.75rem 1rem;
    }

    .nav-logo {
      font-size: 1.25rem;
    }

    .hamburger {
      width: 1.75rem;
      height: 1.75rem;
    }

    .hamburger-line {
      width: 1.75rem;
      height: 0.2rem;
    }

    .mobile-nav a {
      font-size: 1.25rem;
    }
  }
</style>
